{"version":3,"file":"static/js/868.822e44cc.chunk.js","mappings":"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","sources":["components/TMDB/Axios.js","components/TMDB/TMDB_CONSTANTS.js","components/cropper/getCroppedImage.js","components/cropper/CropImage.js","pages/CreateChannelScreen.jsx"],"sourcesContent":["import axios from 'axios'\nimport {TMDB_BASE_URL} from './TMDB_CONSTANTS.js'\nconst instance = axios.create({\n    baseURL: TMDB_BASE_URL,\n    \n  });\n\n  export default instance ;","export const TMDB_BASE_URL = 'https://api.themoviedb.org/3'\nexport const TMDB_API_KEY = '6593c5d9c916aaa2cd321a18ff142ef1'\nexport const TMDB_IMAGE_URL = 'http://image.tmdb.org/t/p/original'\nexport const TMDB_ACTION_MOVIES_URL = 'https://api.themoviedb.org/3/discover/movie?api_key=6593c5d9c916aaa2cd321a18ff142ef1&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=1&with_genres=28&with_watch_monetization_types=flatrate'\nexport const TMDB_TRENDING_MOVIES_URL = 'https://api.themoviedb.org/3/trending/all/day?api_key=6593c5d9c916aaa2cd321a18ff142ef1'\nexport const TMDB_POPULAR_MOVIES_URL = 'https://api.themoviedb.org/3/movie/popular?api_key=6593c5d9c916aaa2cd321a18ff142ef1'\nexport const TMDB_LATEST_MOVIES_URL = \"https://api.themoviedb.org/3/movie/latest?api_key=6593c5d9c916aaa2cd321a18ff142ef1\"\nexport const TMDB_NOW_PLAYING_MOVIES_URL = \"https://api.themoviedb.org/3/movie/now_playing?api_key=6593c5d9c916aaa2cd321a18ff142ef1&language=en-US&page=1\"\nexport const TMDB_TOP_RATED_MOVIES_URL = \"https://api.themoviedb.org/3/movie/top_rated?api_key=6593c5d9c916aaa2cd321a18ff142ef1&language=en-US&page=1\"\nexport const TMDB_UPCOMING_MOVIES_URL = \"https://api.themoviedb.org/3/movie/upcoming?api_key=6593c5d9c916aaa2cd321a18ff142ef1&language=en-US&page=1\"\n\nexport const languages = \"CA  Canada 2 (en+fr) CN  China 2 (cn+zh)IN  India 5 (hi+kn+ml+ta+te)NO  Norway 2 (nb+no)ES  Spain 4 (ca+es+eu+gl)\"\n\n// https://api.themoviedb.org/3/discover/movie?api_key=6593c5d9c916aaa2cd321a18ff142ef1&language=hi&region=IN&with_original_language=ml","export function getCroppedImg(image, crop, fileName) {\n    const canvas = document.createElement('canvas')\n    const scaleX = image.naturalWidth / image.width\n    const scaleY = image.naturalHeight / image.height\n    canvas.width = crop.width\n    canvas.height = crop.height\n    const ctx = canvas.getContext('2d')\n  \n    // New lines to be added\n    const pixelRatio = window.devicePixelRatio\n    canvas.width = crop.width * pixelRatio\n    canvas.height = crop.height * pixelRatio\n    ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0)\n    ctx.imageSmoothingQuality = 'high'\n  \n    ctx.drawImage(\n      image,\n      crop.x * scaleX,\n      crop.y * scaleY,\n      crop.width * scaleX,\n      crop.height * scaleY,\n      0,\n      0,\n      crop.width,\n      crop.height\n    )\n  \n    // As Base64 string\n    const base64Image = canvas.toDataURL(\"image/jpeg\");\n    return base64Image;\n  \n    // As a blob\n    // return new Promise((resolve, reject) => {\n    //   canvas.toBlob(\n    //     (blob) => {\n    //       blob.name = fileName\n    //       blob.originalname = fileName\n    //       resolve(blob)\n    //     },\n    //     'image/jpeg',\n    //     1\n    //   )\n    // })\n  }\n  ","import React, { useRef, useState } from 'react'\nimport { Button, Col, Container, Row } from 'react-bootstrap'\nimport Cropper from 'react-cropper'\nimport 'cropperjs/dist/cropper.css'\nimport { getCroppedImg } from './getCroppedImage'\n\nconst CropImage = ({cropRatio, src, imageCallback, closeHander }) => {\n console.log(cropRatio);\n  const cropperRef = useRef(null)\n  const cropDetailsRef = useRef(null)\n\n  const onCrop = (e) => (cropDetailsRef.current = e.detail)\n\n  const clickHndler = async () => {\n    const croppedImage = await getCroppedImg(\n      cropperRef.current,\n      cropDetailsRef.current,\n      src.name\n    )\n    imageCallback(croppedImage)\n  }\n\n  return (\n    <div className=\"position-fixed \" style={{zIndex:99 ,top:\"5rem\" ,left:\"23rem\" ,minWidth:\"30rem\",maxWidth:\"40rem\"}}>\n      <Container className=\" text-center bg-white shadow rounded-2 mx-auto p-2 m-0\">\n        \n          <Col xs={12} className=\"text-center  \">\n            <Cropper\n              src={src ? URL.createObjectURL(src) : ''}\n              className=\"image-fulid\"\n              style={{ height: '27rem', width: 'fit-content' }}\n              // Cropper.js options\n              aspectRatio={ cropRatio.width/cropRatio.height }\n              guides={false}\n              crop={onCrop}\n              ref={cropperRef}\n              zoomable={true}\n              // autoCrop={false}\n              movable={false}\n              minCropBoxWidth={200}\n              minCropBoxHeight={250}\n            />\n            <div className=\"text-center\">\n            </div>\n            <div className=\"px-auto py-2 text-center\">\n            <Button\n              type=\"button\"\n              className=\"btn-danger us-btn-danger mx-1\"\n              style={{ width: 'fit-content' }}\n              onClick={closeHander}\n            >\n              Cancel\n            </Button>\n\n            <Button\n              type=\"button\"\n              className=\"us-btn mx-1\"\n              style={{ width: 'fit-content' }}\n              onClick={clickHndler}\n            >\n              Crop\n            </Button>\n            </div>\n          </Col>\n          \n      </Container>\n    </div>\n  )\n}\n\nexport default CropImage\n","import React, { useEffect, useState } from 'react'\nimport { Container, Row, Col,FormControl } from 'react-bootstrap'\n\nimport { TMDB_API_KEY, TMDB_IMAGE_URL } from '../components/TMDB/TMDB_CONSTANTS';\nimport axios from '../components/TMDB/Axios';\nimport { LANDING_BANNER, LOADER_GIF_IMAGE, LOGO } from '../assets/icons';\nimport CropImage from '../components/cropper/CropImage';\nimport Tooltip from '@mui/material/Tooltip';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { updateChannel, updateProfile } from '../Redux/User/Actions/userActions';\nimport { useNavigate } from 'react-router-dom';\nimport CHANNEL_BANNER  from '../assets/CHANNEL_BANNER.png';\n \nfunction CreateChannelScreen() {\n    const [movie, setMovie] = useState('');\n    const [showCropper, setShowCropper] = useState(false)\n    const [cropImage, setCropImage] = useState(false)\n    const [image, setImage] = useState(null)\n    const [details,setDetails] = useState({channel:\"\",about:\"\"})\n    const dispatch = useDispatch();\n    const navigate = useNavigate()\n\n    const {loading,update,userData} = useSelector((state)=>state.user)\n    \n    useEffect(() => {\n        if(userData?.channel){\n            navigate(\"/user/dashboard\")\n        }\n\n        axios.get(`trending/all/day?api_key=${TMDB_API_KEY}`).then((response) => {\n            setMovie(response.data.results.sort(() => { return 0.5 - Math.random() })[0])\n        })\n    }, [userData,navigate]);\n    \n\n    const handleSubmit = (e) => {\n        e.preventDefault();\ndispatch(updateChannel({channel:details.channel,about:details.about,image}))\n    }\n    return (\n        <div style={{ backgroundImage: `url(${movie ? TMDB_IMAGE_URL + movie.backdrop_path : LANDING_BANNER})`, backgroundSize: \"cover\", backgroundRepeat: \"no-repeat\" }} >\n            <Container style={{ minHeight: \"100vh\", background: \" rgba(0,0,0,.9) 100%\" }} fluid>\n                <Row>\n                    <Col className='create-channel-logo mx-auto my-5 py-5 text-success d-none d-sm-block' style={{ fontStyle: \"italic\", fontFamily: \"sans-serif\" }} lg={4}>\n\n                        <h1><img width={\"100%\"} src={LOGO} alt=\"SHOW TIME\" /></h1>\n                        <div>\n                           \n                            <p >\n                                This website is intended for viewing solely in the United States and its territories and possessions.\n                                <br />\n\n                                <br />\n                                <span style={{ fontSize: \"10px\", fontStyle: \"oblique\" }}> Privacy Policy | Terms of Use | Closed Captioning Do Not Sell My Personal Information | Cookies Policy</span>\n                                <br />\n                                <br />\n                                <span className='' style={{ fontSize: \"13px\" }}> © 2022 Showtime Networks Inc. and Showtime Digital Inc. <br /> SHOWTIME is a registered trademark of Showtime Networks Inc. <br />  <br /> a Paramount Global Company. All rights reserved.</span>\n                            </p>\n                        </div>\n\n                    </Col>\n                    <Col className='mx-auto  text-success text-uppercase text-center my-1 p-3' lg={5}>\n                        <form onSubmit={handleSubmit}>\n                            <Row className=' shadow  '>\n                            <FormControl\n                            className=\"crop_image d-none\"\n                            id=\"upload_thumbnail\"\n                            type=\"file\"\n                            onChange={(e) => {\n                                setCropImage(e.target.files[0])\n                                setShowCropper(true)\n                            }}\n                            accept=\".jpg,.jpeg,.png,\"\n\n                        />\n                        <Tooltip title=\"Add Banner For Your Channel\">\n                        <label htmlFor=\"upload_thumbnail\" className='  upload-thumbnail px-auto ' style={{height:\"13rem\"}}  >\n                            <img className='my-5 rounded p-0 m-0 w-100' src={image ? image : CHANNEL_BANNER} alt=\"\"   />\n                            </label>\n                        </Tooltip>\n                        {/* {loading ? <Loader /> : \"\"} */}\n                        {showCropper && (\n                            <CropImage\n                                cropRatio={{ width: 1600, height: 300 }}\n                                src={cropImage}\n                                imageCallback={(image) => {\n                                    setImage(image)\n                                    setShowCropper(false)\n                                }}\n                                closeHander={() => {\n                                    setShowCropper(false)\n                                }}\n                            />\n                        )}\n                            </Row>\n                            <Row>\n                            {loading && <div className='text-center'><img width={\"60\"} src={LOADER_GIF_IMAGE}/></div>}\n                            </Row>\n                            <Row className=' shadow  my-2 text-start' >\n                                <label  htmlFor=\"\">channel Name</label>\n                                <input type=\"text\"  className=' border-0 p-2 my-2 text-white' onChange={((e)=>setDetails({...details,channel:e.target.value}))} style={{background:\"rgb(255 255 255 / 10%)\",outline:\"none\"}} required/>\n                            </Row>\n                            <Row className=' shadow  my-2 text-start'>\n                                <label htmlFor=\"\">about channel</label>\n                                <textarea name=\"\" id=\"\"  rows=\"6\" onChange={((e)=>setDetails({...details,about:e.target.value}))} className=' my-2 border-0 p-2 text-white' style={{background:\"rgb(255 255 255 / 10%)\",outline:\"none\"}} required></textarea>\n                            </Row>\n                            <div className='text-end '>\n                                <input style={{background:\"rgb(255 255 255 / 10%)\",outline:\"none\"}} className='px-5 py-2 border-0 text-success ' type=\"submit\" value={\"SAVE\"} />\n                            </div>\n                        </form>\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    )\n}\n// background: rgb(0,0,0);\n// background: ;background: rgb(0,0,0);\n// background: linear-gradient(6deg, );\n\nexport default CreateChannelScreen"],"names":["instance","axios","baseURL","TMDB_BASE_URL","TMDB_API_KEY","TMDB_IMAGE_URL","getCroppedImg","image","crop","fileName","canvas","document","createElement","scaleX","naturalWidth","width","scaleY","naturalHeight","height","ctx","getContext","pixelRatio","window","devicePixelRatio","setTransform","imageSmoothingQuality","drawImage","x","y","toDataURL","cropRatio","src","imageCallback","closeHander","console","log","cropperRef","useRef","cropDetailsRef","clickHndler","current","name","croppedImage","className","style","zIndex","top","left","minWidth","maxWidth","Container","Col","xs","URL","createObjectURL","aspectRatio","guides","e","detail","ref","zoomable","movable","minCropBoxWidth","minCropBoxHeight","Button","type","onClick","useState","movie","setMovie","showCropper","setShowCropper","cropImage","setCropImage","setImage","channel","about","details","setDetails","dispatch","useDispatch","navigate","useNavigate","useSelector","state","user","loading","userData","update","useEffect","then","response","data","results","sort","Math","random","backgroundImage","backdrop_path","LANDING_BANNER","backgroundSize","backgroundRepeat","minHeight","background","fluid","fontStyle","fontFamily","lg","LOGO","alt","fontSize","onSubmit","preventDefault","updateChannel","id","onChange","target","files","accept","title","htmlFor","CHANNEL_BANNER","LOADER_GIF_IMAGE","value","outline","required","rows"],"sourceRoot":""}